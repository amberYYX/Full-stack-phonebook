{"version":3,"sources":["Phonebook/PeopleItem.js","Phonebook/Filter.js","Phonebook/PersonForm.js","App.js","index.js"],"names":["PeopleItem","person","likeNoteFunction","deletePersonFunction","console","log","likeNumber","className","name","number","parseInt","style","right","marginTop","onClick","Filter","props","value","searchContent","onChange","handleSearchChange","PersonFrom","newName","handleNameChange","newNumber","handleNumberChange","newLike","persons","setPersons","setNewName","setNewNumber","feedbackMessage","setFeedbackMessage","setNewLike","FeedbackMessage","color","fontSize","background","border","padding","marginBottom","onSubmit","event","preventDefault","window","alert","checkRepeat","forEach","concat","confirm","changeObject","axios","put","id","then","response","map","data","length","personObject","post","setTimeout","Button","borderRadius","backgroundColor","fontColor","height","marginLeft","variant","type","App","useState","useEffect","get","newSearch","setNewSearch","SearchResults","setSearchResults","setErrorMessage","PersonForm","target","newSearchResults","indexOf","matchPerson","index","key","deleteUrl","deletePerson","find","delete","filter","catch","error","deletePersonFunctionOf","clickedPerson","anotherLike","LikeNoteFunctionOf","resultDeletePersonFunctionOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75829fbd.chunk.js","sourcesContent":["import React from \"react\";\n// import Button from '@material-ui/core/Button';\n\n\nconst PeopleItem = ({ person, deletePersonFunction, likeNoteFunction}) => {\n  // const deleteOnePerson = (index) =>{\n  //     console.log(` ${index} delete button clicked.`)\n  // }\n  console.log(`Item ${person.likeNumber}`)\n\n  return (\n    <li className='liStyle'>\n  \n      {person.name} said {person.number}\n      {/* <button onClick={deletePersonFunction}>delete</button> */}\n      \n      <div className='like'>\n        {parseInt(person.likeNumber)}\n        <button\n          style={{\n            right: \"60px\",\n            marginTop: \"-6px\"\n          }}\n          onClick={likeNoteFunction}>\n            like\n        </button> \n      </div>\n    </li>\n  );\n};\n\n// style={{\n//   borderRadius: 12,\n//   backgroundColor: \"rgba(57,62,70,0.1)\",\n//   fontSize: \"12px\",\n//   fontColor: \"white\",\n//   height: \"28px\"\n//   }}\n\nexport default PeopleItem;\n","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n            <div className='inputRow'>\n                Filter shown with name : <input  className='inputSearch' value={props.searchContent} onChange={props.handleSearchChange}></input>\n                {/* <button onClick={showFilterResearch}>Search!</button> */}\n\n            </div>\n    )\n}\n\nexport default Filter","import React from 'react'\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button';\n\n\n\n\nconst PersonFrom = ({ newName, handleNameChange, newNumber, newLike, handleNumberChange, persons, setPersons, setNewName, setNewNumber, feedbackMessage, setFeedbackMessage, setNewLike}) => {\n\n  // const baseUrl = 'http://localhost:3001/api/persons'\n  const baseURL = '/api/persons' //relative URL \n\n  const FeedbackMessage = ({feedbackMessage}) => {\n    const feedbackStyle = {\n      color: 'green',\n      fontSize: 15,\n      background: 'grey',\n      border: 'solid',\n      padding: 10,\n      marginBottom: 10\n    }\n\n    if (feedbackMessage === null){\n      return null\n    }else{\n      return (\n        <div style={feedbackStyle}>{feedbackMessage}</div>\n      )\n    }   \n  }\n  \n\n    const addNewPerson = (event) => {\n        event.preventDefault()\n        // console.log('button clicked', event.target)\n\n        // const baseUrl = 'http://localhost:3001/persons'\n\n        if(newName === '' && newNumber === ''){\n          window.alert('Please input your name and your note.')\n          return null\n          }else if (newName === ''){\n            window.alert('Please input your name.')\n            return null\n          }else if (newNumber === ''){\n            window.alert('Please input your note.')\n            return null\n          }\n    \n        let checkRepeat = ''\n        persons.forEach(function(person)  {\n          if(person.name === newName){\n            checkRepeat = checkRepeat.concat({newName})\n            if(window.confirm(`Do you want to update ${person.name}'s note?`)){\n              const changeObject = {...person, number: newNumber}\n              axios\n                .put(`${baseURL}/${person.id}`, changeObject)\n                .then(response => {\n                  setPersons(persons.map(person => person.name !== newName?person : response.data))\n                })\n            }\n          }else{\n            // checkRepeat = checkRepeat\n          }\n        })\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n\n        if (checkRepeat.length === 0){\n          const personObject = \n                  {\n                    name : newName,\n                    number : newNumber,\n                    likeNumber: 0,\n                    // id : persons.length + Math.round(Math.random()*100000)          \n                  }\n    \n            // const newPersons = persons.concat(personObject)\n            // console.log('new persons',{newPersons})\n\n            axios\n            .post(baseURL, personObject)\n            .then(response => {\n              // setPersons(newPersons)\n              setPersons(persons.concat(response.data))\n\n              // setFeedbackMessage(` Added new contact '${response.data.name}'`)\n              setTimeout(() => {\n                setFeedbackMessage(null)\n              }, 5000);\n\n              setNewName('')\n              setNewNumber('')\n              setNewLike(0)\n              console.log(response)\n            })\n        }else{\n          // window.alert(`${newName} is already added to phonebook`);\n          setNewName('')\n          setNewNumber('')\n        }\n      }\n    \n    \n    \n    \n    \n    return (\n        <div>\n            <FeedbackMessage feedbackMessage={feedbackMessage}></FeedbackMessage>\n\n            <form onSubmit={addNewPerson}>\n                <div className='inputRow'>\n                    Your name : <input value={newName} onChange={handleNameChange}/>\n                </div>\n                <div className='inputRow'>\n                    Your words: <input value={newNumber} onChange={handleNumberChange}></input>\n                    <Button \n                      style={{\n                        borderRadius: 12,\n                        backgroundColor: \"rgba(57,62,70,0.1)\",\n                        fontSize: \"12px\",\n                        fontColor: \"white\",\n                        height: \"24px\",\n                        marginLeft: \"3px\"\n                    }}\n                    variant=\"contained\"\n                    type=\"submit\">add</Button>\n                </div>\n\n            </form>\n        </div>\n    )\n}\n\nexport default PersonFrom","import React, { useState, useEffect }  from 'react';\n\nimport PeopleItem from './Phonebook/PeopleItem'\nimport Filter from './Phonebook/Filter'\nimport PersonForm from './Phonebook/PersonForm'\n\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button';\n\nconst baseURL = '/api/persons' //relative URL \n\n\n\nconst App = () => {  \n  \n  const [persons, setPersons] = useState([])\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get(baseURL)\n      .then(response => {\n        // console.log('get all fulfilled')\n        setPersons(response.data)\n      })\n  }, [])\n\n  // const [ persons, setPersons ] = useState([\n  //   { name: 'Arto Hellas', number: '040-123456' , likeNumber: 0, id: '1'},\n  //   { name: 'Ada Lovelace', number: '39-44-5323523', likeNumber: 0, id: '2'},\n  //   { name: 'Dan Abramov', number: '12-43-234345', likeNumber: 0 ,id: '3'},\n  //   { name: 'Mary Poppendieck', number: '39-23-6423122' ,likeNumber: 0, id: '4'}\n  // ]) \n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newSearch, setNewSearch] = useState('')\n\n  const [newLike, setNewLike] = useState(0)\n\n  const [ SearchResults, setSearchResults] = useState([])\n\n  const [feedbackMessage, setFeedbackMessage] = useState(null)\n  const [ErrorMessage, setErrorMessage] = useState(null)\n\n  //Error feedback\n  // const Notification = ({message}) => {\n  //   const errorStyle = {\n  //     color: 'red',\n  //     fontSize: 15,\n  //     background: 'grey',\n  //     border: 'solid',\n  //     padding: 10,\n  //     marginBottom: 10\n  //   }\n\n    \n  //     if(message === null){\n  //       return null\n  //     }\n  //     return(\n  //       <div style={errorStyle}>{message}</div>\n  //     )\n  // }\n\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n\n  const showFilterResearch = (props) => {\n    props = {newSearch}\n    const emptyResult = []\n    setSearchResults(emptyResult)\n                       \n    let newSearchResults = []\n    if(newSearch.length !== 0){\n      persons.forEach(function(person){\n        if (person.name.indexOf(newSearch) !== -1){\n          //console.log('find match', {person})\n          const matchPerson = person\n          newSearchResults = newSearchResults.concat(matchPerson)\n          setSearchResults(newSearchResults)\n  \n          //console.log('update search results', {newSearchResults})\n  \n          setNewSearch('')       \n        }\n      })\n    }else {\n      window.alert('please enter search name.')\n    }\n  }\n\n  const deletePersonFunctionOf = (id) => {\n    console.log(`${id} delete button clicled.`)\n    // const index = id -1\n    // const baseUrl = `http://localhost:3001/persons`\n    // const deleteUrl = `http://localhost:3001/persons/${id}`\n    const deleteUrl = `${baseURL}/${id}`\n\n\n    const deletePerson = persons.find(person => person.id === id)\n\n    if(window.confirm(`Do you want to delete ${deletePerson.name}?`)){\n      console.log(`${id} confirm to delete.`)\n      // const deleteObject = persons[index]\n      axios\n        .delete(deleteUrl)\n        .then(response => {\n          // console.log(response.data) 是个空的\n          setPersons(persons.filter( person => person.id !== id))\n        })\n        .catch(error=> {\n          setErrorMessage(`Information of ${deletePerson.name} has already been removed from server.`)\n          console.log('fail')\n        })\n    }\n  }\n\n\n  const resultDeletePersonFunctionOf = (id) => {\n    console.log(`${id} delete button clicled.`)\n    // const deleteUrl = `http://localhost:3001/persons/${id}`\n    const deleteUrl = `${baseURL}/${id}`\n\n\n    const deletePerson = persons.find(person => person.id === id)\n\n    if(window.confirm(`Do you want to delete ${deletePerson.name}?`)){\n      console.log(`${id} confirm to delete.`)\n      axios\n        .delete(deleteUrl)\n        .then(response => {\n          setPersons(persons.filter( person => person.id !== id))\n          setSearchResults(SearchResults.filter( person => person.id !== id))\n        })\n    }\n  }\n\n  const LikeNoteFunctionOf = (clickedPerson) => {\n    // console.log(`${clickedPerson.name} like button clicled.`)\n    const anotherLike = clickedPerson.likeNumber + 1\n    const changeObject = {...clickedPerson, likeNumber: anotherLike}\n\n    // const newPersons = persons.map(person => person.id !== clickedPerson.id? person: changeObject)\n    // console.log(newPersons)\n    setNewLike(0)\n    // setPersons(newPersons)\n\n    axios\n      .put(`${baseURL}/${clickedPerson.id}`, changeObject)\n      .then(response => {\n      setPersons(persons.map(person => person.id !== clickedPerson.id? person: changeObject))\n    })\n    \n  }\n\n\n\n  \n\n\n  return (\n    <div>\n\n      <div className='column1'> \n        <h1>Say</h1>\n        <h1 className='h11'>Something!</h1>\n        <h1 className='line'>——————————————————————————————————</h1>\n        <h1 className='line1'>——————————————————————————————————</h1>\n\n        <h2>Show your attitude.</h2>\n\n       {/* 添加结果的notification*/}\n       {/* <Notification message={ErrorMessage}></Notification> */}\n       \n\n      </div>\n      \n      <div className='column2'>\n        <div className='inColumn2'>\n        <p className='note'>Leave your note here</p>\n\n<PersonForm \n  newName={newName} \n  newNumber={newNumber} \n  newLike={newLike}\n  persons={persons} \n  setNewName={setNewName} \n  setNewNumber={setNewNumber} \n  setNewLike = {setNewLike}\n  setPersons={setPersons} \n  handleNameChange={handleNameChange} \n  handleNumberChange={handleNumberChange}\n  feedbackMessage={feedbackMessage}\n  setFeedbackMessage={setFeedbackMessage}>\n</PersonForm>\n\n<br/>\n<br/>\n\n<p className='note'>Notes</p>\n\n<div>\n  <Filter searchContent={newSearch} handleSearchChange={handleSearchChange} ></Filter>\n  <Button \n    style={{\n      borderRadius: 12,\n      backgroundColor: \"rgba(57,62,70,0.1)\",\n      fontSize: \"12px\",\n      fontColor: \"white\",\n      // float:\" right\",\n      marginLeft: \"430px\",\n      height: \"24px\",\n      marginTop: \"-47px\",\n      }}\n      variant=\"contained\"\n      onClick={showFilterResearch}>Search!</Button>\n</div>\n\n\n<div>\n  <ul>\n      {persons.map((person, index) => \n      <PeopleItem \n        key={index} \n        person={person} \n        deletePersonFunction={()=>deletePersonFunctionOf(person.id)}\n        likeNoteFunction = {() => LikeNoteFunctionOf(person)}>\n      </PeopleItem>\n      )}\n  </ul>\n</div>\n\n\n<p className='note'>Search Results</p>\n\n  <ul>\n    {SearchResults.map(person => \n    <PeopleItem\n    key={person.id}\n    person = {person}\n    deletePersonFunction={()=> resultDeletePersonFunctionOf(person.id)}>\n    </PeopleItem>  \n  )}\n  </ul>\n        </div>\n      </div>\n\n      {/* <div className='footer'> \n        <p className='info'>developed by Amber Y</p>\n      </div> */}\n\n\n\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nimport App from './App'\n\n\n\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}